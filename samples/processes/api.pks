create or replace package metadata.api authid current_user is
    ------------------------------------------------------------------------------------------------------------------------
    -- out.bind(variable_name, date_value, number_value, text_value, macro)
    --    | usage :
    --    |         out.bind('var1', date_value => trunc(sysdate))
    --    |         out.bind('var2', number_value => 3)
    --    |         out.bind('var4', text_value => 'text')
    --    |         out.bind('var4', macro => 'macro')
    --    | 
    -- out.process(status)
    --    | usage :
    --    |         out.process('start')
    --    |         out.process('done')
    --    |         out.process('error')
    --    |         out.process('warning')
    --    | 
    -- out.data_integration.check_not_null
    --    | usage :
    --    |         out.data_integration.check_not_null('work_table', 'column1')
    --    | 
    -- out.data_integration.check_unique_key
    --    | usage :
    --    |         out.data_integration.check_unique_key('work_table', 'column1, column2')
    --    | 
    -- out.data_integration.check_primary_key
    --    | usage :
    --    |         out.data_integration.check_primary_key('work_table', 'column1, column2')
    --    | 
    -- out.data_integration.create_table
    --    | usage :
    --    |         out.data_integration.create_table('work_table', q'[
    --    |             select
    --    |                 all_tables.owner,
    --    |                 all_tables.table_name,
    --    |                 all_tables.tablespace_name,
    --    |                 all_tab_columns.column_name,
    --    |                 all_tab_columns.column_id,
    --    |                 #var1 bind_date,
    --    |                 #var2 bind_number,
    --    |                 #var3 bind_text,
    --    |                 '#var4' bind_macro,
    --    |             from all_tables
    --    |             inner join all_tab_columns on
    --    |                 all_tables.owner = all_tab_columns.owner and
    --    |                 all_tables.table_name = all_tab_columns.table_name
    --    |         ]')
    --    | 
    -- out.data_integration.drop_table
    --    | usage :
    --    |         out.data_integration.drop_table('work_table');
    --    | 
    -- out.data_integration.control_append
    --    | usage :
    --    |         out.data_integration.control_append('schema.target_table', 'work_table', q'[
    --    |             partition name => (name, ex: p_1)
    --    |                                   -> force a insert into partition
    --    |             partition value => (expression, ex: to_date('20200101', 'yyyymmdd'))
    --    |                                   -> if partition name option is provided, it will create the partition with that name
    --    |                                   -> if partition name option is not provided the framework will generate a name for the partition
    --    |             truncate partition => (true / false)
    --    |                                   -> set to true if partition name need to be truncated before the insert. 
    --    |             truncate table => (true / false)
    --    |                                   -> set to true if target table needs to be truncated
    --    |         ]')
    --    | 
    -- out.data_integration.incremental_update
    --    | usage :
    --    |         out.data_integration.incremental_update('schema.target_table', 'work_table', q'[
    --    |             method => (full join / merge)
    --    |                                   -> default option is full join
    --    |             natural key => (columns, ex: nk1, nk2)
    --    |             partition name => (name, ex: p_1)
    --    |                                   -> force a incremental update into partition
    --    |             surrogate key => (column, ex: sk)
    --    |         ]')
    --    | 
    -- out.files.copy
    --    | usage :
    --    |        
    --    | 
    -- out.files.move
    --    | usage :
    --    |        
    --    | 
    -- out.files.remove
    --    | usage :
    --    |        
    --    | 
    -- out.files.wait
    --    | usage :
    --    |        
    --    | 
    -- out.files.load
    --    | usage :
    --    |        
    --    | 
    -- out.files.unload
    --    | usage :
    --    |        
    --    | 
    -- out.files.zip
    --    | usage :
    --    |        
    --    | 
    -- out.files.unzip
    --    | usage :
    --    |        
    --    | 
    -- out.files.unzip
    --    | usage :
    --    |        
    --    | 
    -- out.internet.http_get
    --    | usage :
    --    |        
    --    | 
    -- out.utilities.bash
    --    | usage :
    --    |        
    --    | 
    -- out.utilities.plsql
    --    | usage :
    --    |        
    --    | 
    ------------------------------------------------------------------------------------------------------------------------
end api;
/